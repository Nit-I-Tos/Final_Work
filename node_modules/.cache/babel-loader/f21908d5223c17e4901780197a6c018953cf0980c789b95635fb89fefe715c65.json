{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nikita\\\\\\u041A\\u0420\\\\project\\\\src\\\\components\\\\Main\\\\Slider\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getImages } from \"../../../imagesApi\";\nimport Arrows from \"./Arrows/Arrows\";\nimport Dots from \"./Dots/Dots\";\nimport SlidesList from \"./SliderList/SliderList\";\nimport s from './Slider.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SliderContext = /*#__PURE__*/createContext();\nconst Slider = function ({\n  width,\n  height,\n  autoPlay,\n  autoPlayTime\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  const [slide, setSlide] = useState(0);\n  const [touchPosition, setTouchPosition] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      const images = await getImages();\n      setItems(images);\n    };\n    loadData();\n  }, []);\n  const changeSlide = (direction = 1) => {\n    let slideNumber = 0;\n    if (slide + direction < 0) {\n      slideNumber = items.length - 1;\n    } else {\n      slideNumber = (slide + direction) % items.length;\n    }\n    setSlide(slideNumber);\n  };\n  const goToSlide = number => {\n    setSlide(number % items.length);\n  };\n  const handleTouchStart = e => {\n    const touchDown = e.touches[0].clientX;\n    setTouchPosition(touchDown);\n  };\n  const handleTouchMove = e => {\n    if (touchPosition === null) {\n      return;\n    }\n    const currentPosition = e.touches[0].clientX;\n    const direction = touchPosition - currentPosition;\n    if (direction > 10) {\n      changeSlide(1);\n    }\n    if (direction < -10) {\n      changeSlide(-1);\n    }\n    setTouchPosition(null);\n  };\n  useEffect(() => {\n    if (!autoPlay) return;\n    const interval = setInterval(() => {\n      changeSlide(1);\n    }, autoPlayTime);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [items.length, slide]); // when images uploaded or slide changed manually we start timer\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height\n    },\n    className: \"slider\",\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    children: /*#__PURE__*/_jsxDEV(SliderContext.Provider, {\n      value: {\n        goToSlide,\n        changeSlide,\n        slidesCount: items.length,\n        slideNumber: slide,\n        items\n      },\n      children: [/*#__PURE__*/_jsxDEV(Arrows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlidesList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"PJnZRK1wp1dtBpiXss4Yk7BfNFs=\");\n_c = Slider;\nSlider.propTypes = {\n  autoPlay: PropTypes.bool,\n  autoPlayTime: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string\n};\nSlider.defaultProps = {\n  autoPlay: false,\n  autoPlayTime: 5000,\n  width: \"100%\",\n  height: \"100%\"\n};\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","PropTypes","getImages","Arrows","Dots","SlidesList","s","jsxDEV","_jsxDEV","SliderContext","Slider","width","height","autoPlay","autoPlayTime","_s","items","setItems","slide","setSlide","touchPosition","setTouchPosition","loadData","images","changeSlide","direction","slideNumber","length","goToSlide","number","handleTouchStart","e","touchDown","touches","clientX","handleTouchMove","currentPosition","interval","setInterval","clearInterval","style","className","onTouchStart","onTouchMove","children","Provider","value","slidesCount","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","bool","string","defaultProps","$RefreshReg$"],"sources":["C:/Nikita/лџла/project/src/components/Main/Slider/Slider.jsx"],"sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getImages } from \"../../../imagesApi\";\r\n\r\nimport Arrows from \"./Arrows/Arrows\";\r\nimport Dots from \"./Dots/Dots\";\r\n\r\nimport SlidesList from \"./SliderList/SliderList\";\r\nimport s from './Slider.module.css'\r\n\r\nexport const SliderContext = createContext();\r\n\r\nconst Slider = function ({ width, height, autoPlay, autoPlayTime }) {\r\n  const [items, setItems] = useState([]);\r\n  const [slide, setSlide] = useState(0);\r\n  const [touchPosition, setTouchPosition] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const images = await getImages();\r\n      setItems(images);\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  const changeSlide = (direction = 1) => {\r\n    let slideNumber = 0;\r\n\r\n    if (slide + direction < 0) {\r\n      slideNumber = items.length - 1;\r\n    } else {\r\n      slideNumber = (slide + direction) % items.length;\r\n    }\r\n\r\n    setSlide(slideNumber);\r\n  };\r\n\r\n  const goToSlide = (number) => {\r\n    setSlide(number % items.length);\r\n  };\r\n\r\n  const handleTouchStart = (e) => {\r\n    const touchDown = e.touches[0].clientX;\r\n\r\n    setTouchPosition(touchDown);\r\n  }\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (touchPosition === null) {\r\n      return;\r\n    }\r\n\r\n    const currentPosition = e.touches[0].clientX;\r\n    const direction = touchPosition - currentPosition;\r\n\r\n    if (direction > 10) {\r\n      changeSlide(1);\r\n    }\r\n\r\n    if (direction < -10) {\r\n      changeSlide(-1);\r\n    }\r\n\r\n    setTouchPosition(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!autoPlay) return;\r\n\r\n    const interval = setInterval(() => {\r\n      changeSlide(1);\r\n    }, autoPlayTime);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [items.length, slide]); // when images uploaded or slide changed manually we start timer\r\n\r\n  return (\r\n    <div\r\n      style={{ width, height }}\r\n      className=\"slider\"\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n    >\r\n      <SliderContext.Provider\r\n        value={{\r\n          goToSlide,\r\n          changeSlide,\r\n          slidesCount: items.length,\r\n          slideNumber: slide,\r\n          items,\r\n        }}\r\n      >\r\n        <Arrows />\r\n        <SlidesList />\r\n        <Dots />\r\n      </SliderContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlider.propTypes = {\r\n  autoPlay: PropTypes.bool,\r\n  autoPlayTime: PropTypes.number,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string\r\n};\r\n\r\nSlider.defaultProps = {\r\n  autoPlay: false,\r\n  autoPlayTime: 5000,\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n};\r\n\r\nexport default Slider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}