{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nikita\\\\\\u041A\\u0420\\\\project\\\\src\\\\components\\\\ProjectAnimation\\\\ProjectAnimation.jsx\",\n  _s = $RefreshSig$();\nimport s from './ProjectAnimation.module.css';\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectAnimation() {\n  _s();\n  let headElem = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: s.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.quiz__head,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.head__content,\n          ref: headElem,\n          id: \"head\",\n          children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut ducimus odit accusamus, illum quas magni provident odio praesentium commodi sint, porro harum, minus cupiditate architecto culpa aut ex dolore officia.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.quiz__body,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.buttons,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.buttons__content,\n            id: s.buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: s.button,\n              children: \"Default button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: s.button_wrong,\n              children: \"Wrong answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 76\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: s.button_correct,\n              children: \"Correct answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: s.button_passive,\n              children: \"Unclicked button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 83\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.quiz__footer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.footer__content,\n            id: s.pages,\n            children: \"0 / 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectAnimation, \"D2q1TUPIqZXikDjC1WTq4yXCw98=\");\n_c = ProjectAnimation;\nclass Quiz {\n  constructor(type, questions, results) {\n    //Тип теста: 1 - классический тест с правильными ответами, 2 - тест без правильных ответов\n    this.type = type;\n\n    //Массив с вопросами\n    this.questions = questions;\n\n    //Массив с возможными результатами\n    this.results = results;\n\n    //Количество набранных очков\n    this.score = 0;\n\n    //Номер результата из массива\n    this.result = 0;\n\n    //Номер текущего вопроса\n    this.current = 0;\n  }\n  Click(index) {\n    //Добавляем очки\n    let value = this.questions[this.current].Click(index);\n    this.score += value;\n    let correct = -1;\n\n    //Если было добавлено хотя бы одно очко, то считаем, что ответ верный\n    if (value >= 1) {\n      correct = index;\n    } else {\n      //Иначе ищем, какой ответ может быть правильным\n      for (let i = 0; i < this.questions[this.current].answers.length; i++) {\n        if (this.questions[this.current].answers[i].value >= 1) {\n          correct = i;\n          break;\n        }\n      }\n    }\n    this.Next();\n    return correct;\n  }\n\n  //Переход к следующему вопросу\n  Next() {\n    this.current++;\n    if (this.current >= this.questions.length) {\n      this.End();\n    }\n  }\n\n  //Если вопросы кончились, этот метод проверит, какой результат получил пользователь\n  End() {\n    for (let i = 0; i < this.results.length; i++) {\n      if (this.results[i].Check(this.score)) {\n        this.result = i;\n      }\n    }\n  }\n}\n\n//Класс, представляющий вопрос\nclass Question {\n  constructor(text, answers) {\n    this.text = text;\n    this.answers = answers;\n  }\n  Click(index) {\n    return this.answers[index].value;\n  }\n}\n\n//Класс, представляющий ответ\nclass Answer {\n  constructor(text, value) {\n    this.text = text;\n    this.value = value;\n  }\n}\n\n//Класс, представляющий результат\nclass Result {\n  constructor(text, value) {\n    this.text = text;\n    this.value = value;\n  }\n\n  //Этот метод проверяет, достаточно ли очков набрал пользователь\n  Check(value) {\n    if (this.value <= value) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nconst results = [new Result(\"Вам многому нужно научиться\", 0), new Result(\"Вы уже неплохо разбираетесь\", 2), new Result(\"Ваш уровень выше среднего\", 4), new Result(\"Вы в совершенстве знаете тему\", 6)];\n\n//Массив с вопросами\nconst questions = [new Question(\"2 + 2 = \", [new Answer(\"2\", 0), new Answer(\"3\", 0), new Answer(\"4\", 1), new Answer(\"0\", 0)])];\n\n//Сам тест\nconst quiz = new Quiz(1, questions, results);\nUpdate();\n\n//Обновление теста\nfunction Update() {\n  let buttonsElem = document.getElementById(s.buttons);\n\n  //Проверяем, есть ли ещё вопросы\n  if (quiz.current < quiz.questions.length) {\n    //Если есть, меняем вопрос в заголовке\n    headElem.innerHTML = quiz.questions[quiz.current].text;\n\n    //Удаляем старые варианты ответов\n    buttonsElem.innerHTML = \"\";\n\n    //Создаём кнопки для новых вариантов ответов\n    for (let i = 0; i < quiz.questions[quiz.current].answers.length; i++) {\n      let btn = document.createElement(\"button\");\n      btn.className = \"button\";\n      btn.innerHTML = quiz.questions[quiz.current].answers[i].text;\n      btn.setAttribute(\"index\", i);\n      buttonsElem.appendChild(btn);\n    }\n\n    //Выводим номер текущего вопроса\n    pagesElem.innerHTML = quiz.current + 1 + \" / \" + quiz.questions.length;\n\n    //Вызываем функцию, которая прикрепит события к новым кнопкам\n    Init();\n  } else {\n    //Если это конец, то выводим результат\n    buttonsElem.innerHTML = \"\";\n    headElem.innerHTML = quiz.results[quiz.result].text;\n    pagesElem.innerHTML = \"Очки: \" + quiz.score;\n  }\n}\n_c2 = Update;\nfunction Init() {\n  //Находим все кнопки\n  let btns = document.getElementsByClassName(\"button\");\n  for (let i = 0; i < btns.length; i++) {\n    //Прикрепляем событие для каждой отдельной кнопки\n    //При нажатии на кнопку будет вызываться функция Click()\n    btns[i].addEventListener(\"click\", function (e) {\n      Click(e.target.getAttribute(\"index\"));\n    });\n  }\n}\n_c3 = Init;\nfunction Click(index) {\n  //Получаем номер правильного ответа\n  let correct = quiz.Click(index);\n\n  //Находим все кнопки\n  let btns = document.getElementsByClassName(\"button\");\n\n  //Делаем кнопки серыми\n  for (let i = 0; i < btns.length; i++) {\n    btns[i].className = \"button button_passive\";\n  }\n\n  //Если это тест с правильными ответами, то мы подсвечиваем правильный ответ зелёным, а неправильный - красным\n  if (quiz.type == 1) {\n    if (correct >= 0) {\n      btns[correct].className = \"button button_correct\";\n    }\n    if (index != correct) {\n      btns[index].className = \"button button_wrong\";\n    }\n  } else {\n    //Иначе просто подсвечиваем зелёным ответ пользователя\n    btns[index].className = \"button button_correct\";\n  }\n\n  //Ждём секунду и обновляем тест\n  setTimeout(Update, 1000);\n}\n_c4 = Click;\nexport default ProjectAnimation;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ProjectAnimation\");\n$RefreshReg$(_c2, \"Update\");\n$RefreshReg$(_c3, \"Init\");\n$RefreshReg$(_c4, \"Click\");","map":{"version":3,"names":["s","useRef","jsxDEV","_jsxDEV","ProjectAnimation","_s","headElem","className","wrapper","children","main","quiz__head","head__content","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","quiz__body","buttons","buttons__content","button","button_wrong","button_correct","button_passive","quiz__footer","footer__content","pages","_c","Quiz","constructor","type","questions","results","score","result","current","Click","index","value","correct","i","answers","length","Next","End","Check","Question","text","Answer","Result","quiz","Update","buttonsElem","document","getElementById","innerHTML","btn","createElement","setAttribute","appendChild","pagesElem","Init","_c2","btns","getElementsByClassName","addEventListener","e","target","getAttribute","_c3","setTimeout","_c4","$RefreshReg$"],"sources":["C:/Nikita/КР/project/src/components/ProjectAnimation/ProjectAnimation.jsx"],"sourcesContent":["import s from './ProjectAnimation.module.css'\r\nimport { useRef } from \"react\";\r\n\r\nfunction ProjectAnimation(){\r\n    let headElem = useRef();\r\n    return(\r\n        <div className={s.wrapper}>\r\n   <main className={s.main}>\r\n       <div className={s.quiz__head}>\r\n           <div className={s.head__content} ref={headElem} id='head'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut ducimus odit accusamus, illum quas magni provident odio praesentium commodi sint, porro harum, minus cupiditate architecto culpa aut ex dolore officia.</div>\r\n       </div>\r\n       <div className={s.quiz__body}>\r\n           <div className={s.buttons}>\r\n               <div className={s.buttons__content} id={s.buttons}>\r\n                   <button className={s.button}>Default button</button><br/>\r\n                   <button className={s.button_wrong}>Wrong answer</button><br/>\r\n                   <button className={s.button_correct} >Correct answer</button><br/>\r\n                   <button className={s.button_passive} >Unclicked button</button><br/>\r\n               </div>\r\n           </div>\r\n \r\n           <div className={s.quiz__footer}>\r\n               <div className={s.footer__content} id={s.pages}>0 / 0</div>\r\n           </div>\r\n       </div>\r\n      \r\n   </main>\r\n</div>\r\n    )\r\n}\r\n\r\nclass Quiz\r\n{\r\n   constructor(type, questions, results)\r\n   {\r\n       //Тип теста: 1 - классический тест с правильными ответами, 2 - тест без правильных ответов\r\n       this.type = type;\r\n \r\n       //Массив с вопросами\r\n       this.questions = questions;\r\n \r\n       //Массив с возможными результатами\r\n       this.results = results;\r\n \r\n       //Количество набранных очков\r\n       this.score = 0;\r\n \r\n       //Номер результата из массива\r\n       this.result = 0;\r\n \r\n       //Номер текущего вопроса\r\n       this.current = 0;\r\n   }\r\n \r\n   Click(index)\r\n   {\r\n       //Добавляем очки\r\n       let value = this.questions[this.current].Click(index);\r\n       this.score += value;\r\n \r\n       let correct = -1;\r\n \r\n       //Если было добавлено хотя бы одно очко, то считаем, что ответ верный\r\n       if(value >= 1)\r\n       {\r\n           correct = index;\r\n       }\r\n       else\r\n       {\r\n           //Иначе ищем, какой ответ может быть правильным\r\n           for(let i = 0; i < this.questions[this.current].answers.length; i++)\r\n           {\r\n               if(this.questions[this.current].answers[i].value >= 1)\r\n               {\r\n                   correct = i;\r\n                   break;\r\n               }\r\n           }\r\n       }\r\n \r\n       this.Next();\r\n \r\n       return correct;\r\n   }\r\n \r\n   //Переход к следующему вопросу\r\n   Next()\r\n   {\r\n       this.current++;\r\n      \r\n       if(this.current >= this.questions.length)\r\n       {\r\n           this.End();\r\n       }\r\n   }\r\n \r\n   //Если вопросы кончились, этот метод проверит, какой результат получил пользователь\r\n   End()\r\n   {\r\n       for(let i = 0; i < this.results.length; i++)\r\n       {\r\n           if(this.results[i].Check(this.score))\r\n           {\r\n               this.result = i;\r\n           }\r\n       }\r\n   }\r\n}\r\n \r\n//Класс, представляющий вопрос\r\nclass Question\r\n{\r\n   constructor(text, answers)\r\n   {\r\n       this.text = text;\r\n       this.answers = answers;\r\n   }\r\n \r\n   Click(index)\r\n   {\r\n       return this.answers[index].value;\r\n   }\r\n}\r\n \r\n//Класс, представляющий ответ\r\nclass Answer\r\n{\r\n   constructor(text, value)\r\n   {\r\n       this.text = text;\r\n       this.value = value;\r\n   }\r\n}\r\n \r\n//Класс, представляющий результат\r\nclass Result\r\n{\r\n   constructor(text, value)\r\n   {\r\n       this.text = text;\r\n       this.value = value;\r\n   }\r\n \r\n   //Этот метод проверяет, достаточно ли очков набрал пользователь\r\n   Check(value)\r\n   {\r\n       if(this.value <= value)\r\n       {\r\n           return true;\r\n       }\r\n       else\r\n       {\r\n           return false;\r\n       }\r\n   }\r\n}\r\n\r\nconst results =\r\n[\r\n   new Result(\"Вам многому нужно научиться\", 0),\r\n   new Result(\"Вы уже неплохо разбираетесь\", 2),\r\n   new Result(\"Ваш уровень выше среднего\", 4),\r\n   new Result(\"Вы в совершенстве знаете тему\", 6)\r\n];\r\n \r\n//Массив с вопросами\r\nconst questions =\r\n[\r\n   new Question(\"2 + 2 = \",\r\n   [\r\n       new Answer(\"2\", 0),\r\n       new Answer(\"3\", 0),\r\n       new Answer(\"4\", 1),\r\n       new Answer(\"0\", 0)\r\n   ])\r\n];\r\n \r\n//Сам тест\r\nconst quiz = new Quiz(1, questions, results);\r\n\r\n\r\n\r\nUpdate();\r\n\r\n \r\n//Обновление теста\r\nfunction Update()\r\n{\r\n   let buttonsElem = document.getElementById(s.buttons)\r\n\r\n\r\n   //Проверяем, есть ли ещё вопросы\r\n   if(quiz.current < quiz.questions.length)\r\n   {\r\n       //Если есть, меняем вопрос в заголовке\r\n       headElem.innerHTML = quiz.questions[quiz.current].text;\r\n \r\n       //Удаляем старые варианты ответов\r\n       buttonsElem.innerHTML = \"\";\r\n \r\n       //Создаём кнопки для новых вариантов ответов\r\n       for(let i = 0; i < quiz.questions[quiz.current].answers.length; i++)\r\n       {\r\n           let btn = document.createElement(\"button\");\r\n           btn.className = \"button\";\r\n \r\n           btn.innerHTML = quiz.questions[quiz.current].answers[i].text;\r\n \r\n           btn.setAttribute(\"index\", i);\r\n \r\n           buttonsElem.appendChild(btn);\r\n       }\r\n      \r\n       //Выводим номер текущего вопроса\r\n       pagesElem.innerHTML = (quiz.current + 1) + \" / \" + quiz.questions.length;\r\n \r\n       //Вызываем функцию, которая прикрепит события к новым кнопкам\r\n       Init();\r\n   }\r\n   else\r\n   {\r\n       //Если это конец, то выводим результат\r\n       buttonsElem.innerHTML = \"\";\r\n       headElem.innerHTML = quiz.results[quiz.result].text;\r\n       pagesElem.innerHTML = \"Очки: \" + quiz.score;\r\n   }\r\n}\r\n \r\nfunction Init()\r\n{\r\n   //Находим все кнопки\r\n   let btns = document.getElementsByClassName(\"button\");\r\n \r\n   for(let i = 0; i < btns.length; i++)\r\n   {\r\n       //Прикрепляем событие для каждой отдельной кнопки\r\n       //При нажатии на кнопку будет вызываться функция Click()\r\n       btns[i].addEventListener(\"click\", function (e) { Click(e.target.getAttribute(\"index\")); });\r\n   }\r\n}\r\n \r\nfunction Click(index)\r\n{\r\n   //Получаем номер правильного ответа\r\n   let correct = quiz.Click(index);\r\n \r\n   //Находим все кнопки\r\n   let btns = document.getElementsByClassName(\"button\");\r\n \r\n   //Делаем кнопки серыми\r\n   for(let i = 0; i < btns.length; i++)\r\n   {\r\n       btns[i].className = \"button button_passive\";\r\n   }\r\n \r\n   //Если это тест с правильными ответами, то мы подсвечиваем правильный ответ зелёным, а неправильный - красным\r\n   if(quiz.type == 1)\r\n   {\r\n       if(correct >= 0)\r\n       {\r\n           btns[correct].className = \"button button_correct\";\r\n       }\r\n \r\n       if(index != correct)\r\n       {\r\n           btns[index].className = \"button button_wrong\";\r\n       }\r\n   }\r\n   else\r\n   {\r\n       //Иначе просто подсвечиваем зелёным ответ пользователя\r\n       btns[index].className = \"button button_correct\";\r\n   }\r\n \r\n   //Ждём секунду и обновляем тест\r\n   setTimeout(Update, 1000);\r\n}\r\n\r\nexport default ProjectAnimation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}