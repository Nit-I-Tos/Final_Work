{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nikita\\\\\\u041A\\u0420\\\\project\\\\src\\\\components\\\\MatrixBG.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Canvas from \"./Canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatrixBG = props => {\n  _s();\n  const [ctx, setCtx] = useState(null);\n  const [canvasWidth, setCanvasWidth] = useState(null);\n  const establishContext = context => {\n    setCtx(context);\n  };\n  const establishCanvasWidth = width => {\n    setCanvasWidth(width);\n  };\n\n  // Setting up the letters\n  // Move the array outside draw so it is not needlessly recalculated on each call to draw\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZ\";\n  const letters = chars.split(\"\");\n\n  // Font-size remains constant, so similarly move outside draw\n  const fontSize = 10;\n  // Setting up the columns\n  const columns = canvasWidth ? canvasWidth / fontSize : 10;\n  // Setting up the drops\n  const drops = [];\n  for (let i = 0; i < columns; i++) {\n    drops[i] = 1;\n  }\n  const convertMousePosToRowsAndCols = (x, y) => {\n    // get col position\n    const col = Math.floor(x / fontSize);\n\n    // get row pos\n    const row = Math.min(Math.ceil(y / fontSize), Math.floor(ctx.canvas.height));\n    return {\n      row,\n      col\n    };\n  };\n\n  // Disturbance Effect Handlers\n  let disturbanceRow = -1;\n  let disturbanceCol = -1;\n  let timeout;\n  const disturbanceEffect = e => {\n    clearTimeout(timeout);\n    const bounds = e.target.getBoundingClientRect();\n    const x = e.clientX - bounds.left;\n    const y = e.clientY - bounds.top;\n    const {\n      row,\n      col\n    } = convertMousePosToRowsAndCols(x, y);\n    disturbanceRow = row;\n    disturbanceCol = col;\n    timeout = setTimeout(() => {\n      disturbanceRow = -1;\n      disturbanceCol = -1;\n    }, 50);\n  };\n  const isDisturbanceAffectedPosition = dropIndex => {\n    return drops[dropIndex] * fontSize > disturbanceRow && dropIndex === disturbanceCol;\n  };\n  function draw() {\n    if (ctx) {\n      ctx.fillStyle = \"rgba(0, 0, 0, .1)\";\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      for (let i = 0; i < drops.length; i++) {\n        const text = letters[Math.floor(Math.random() * letters.length)];\n        ctx.fillStyle = \"#0f0\";\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n        drops[i]++;\n        if (drops[i] * fontSize > ctx.canvas.height && Math.random() > 0.95) {\n          drops[i] = 0;\n        }\n        if (isDisturbanceAffectedPosition(i)) {\n          const h = Math.max(i - 1, 0);\n          const j = Math.min(i + 1, Math.floor(columns));\n          drops[h] = disturbanceRow;\n          drops[i] = disturbanceRow;\n          drops[j] = disturbanceRow;\n        }\n      }\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    draw: draw,\n    onMouseMove: disturbanceEffect,\n    establishContext: establishContext,\n    establishCanvasWidth: establishCanvasWidth\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(MatrixBG, \"+/hjic1DOfWir87GYIj0mlcG76A=\");\n_c = MatrixBG;\nexport default MatrixBG;\nvar _c;\n$RefreshReg$(_c, \"MatrixBG\");","map":{"version":3,"names":["React","useState","Canvas","jsxDEV","_jsxDEV","MatrixBG","props","_s","ctx","setCtx","canvasWidth","setCanvasWidth","establishContext","context","establishCanvasWidth","width","chars","letters","split","fontSize","columns","drops","i","convertMousePosToRowsAndCols","x","y","col","Math","floor","row","min","ceil","canvas","height","disturbanceRow","disturbanceCol","timeout","disturbanceEffect","e","clearTimeout","bounds","target","getBoundingClientRect","clientX","left","clientY","top","setTimeout","isDisturbanceAffectedPosition","dropIndex","draw","fillStyle","fillRect","length","text","random","fillText","h","max","j","onMouseMove","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Nikita/лџла/project/src/components/MatrixBG.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Canvas from \"./Canvas\";\r\n\r\nconst MatrixBG = (props) => {\r\n    const [ctx, setCtx] = useState(null);\r\n    const [canvasWidth, setCanvasWidth] = useState(null);\r\n\r\n    const establishContext = (context) => {\r\n        setCtx(context);\r\n    };\r\n\r\n    const establishCanvasWidth = (width) => {\r\n        setCanvasWidth(width);\r\n    };\r\n\r\n    // Setting up the letters\r\n    // Move the array outside draw so it is not needlessly recalculated on each call to draw\r\n    const chars =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZABCDEFGHIJKLMNOPQRSTUVXYZ\";\r\n    const letters = chars.split(\"\");\r\n\r\n    // Font-size remains constant, so similarly move outside draw\r\n    const fontSize = 10;\r\n    // Setting up the columns\r\n    const columns = canvasWidth ? canvasWidth / fontSize : 10;\r\n    // Setting up the drops\r\n    const drops = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        drops[i] = 1;\r\n    }\r\n\r\n    \r\n\r\n    const convertMousePosToRowsAndCols = (x, y) => {\r\n        // get col position\r\n        const col = Math.floor(x / fontSize);\r\n\r\n        // get row pos\r\n        const row = Math.min(Math.ceil(y / fontSize), Math.floor(ctx.canvas.height));\r\n\r\n        return { row, col };\r\n    };\r\n\r\n    // Disturbance Effect Handlers\r\n    let disturbanceRow = -1;\r\n    let disturbanceCol = -1;\r\n    let timeout;\r\n\r\n    const disturbanceEffect = (e) => {\r\n        clearTimeout(timeout);\r\n        const bounds = e.target.getBoundingClientRect();\r\n        const x = e.clientX - bounds.left;\r\n        const y = e.clientY - bounds.top;\r\n        const { row, col } = convertMousePosToRowsAndCols(x, y);\r\n        disturbanceRow = row;\r\n        disturbanceCol = col;\r\n        timeout = setTimeout(() => {\r\n            disturbanceRow = -1;\r\n            disturbanceCol = -1;\r\n        }, 50);\r\n    };\r\n\r\n    const isDisturbanceAffectedPosition = (dropIndex) => {\r\n        return drops[dropIndex] * fontSize > disturbanceRow && dropIndex === disturbanceCol;\r\n    };\r\n\r\n    function draw () {\r\n        if (ctx) {\r\n            ctx.fillStyle = \"rgba(0, 0, 0, .1)\";\r\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            for (let i = 0; i < drops.length; i++) {\r\n                const text = letters[Math.floor(Math.random() * letters.length)];\r\n                ctx.fillStyle = \"#0f0\";\r\n                ctx.fillText(text, i * fontSize, drops[i] * fontSize);\r\n                drops[i]++;\r\n                if (drops[i] * fontSize > ctx.canvas.height && Math.random() > 0.95) {\r\n                    drops[i] = 0;\r\n                }\r\n                if (isDisturbanceAffectedPosition(i)) {\r\n                    const h = Math.max(i - 1, 0);\r\n                    const j = Math.min(i + 1, Math.floor(columns));\r\n                    drops[h] = disturbanceRow;\r\n                    drops[i] = disturbanceRow;\r\n                    drops[j] = disturbanceRow;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Canvas\r\n            draw={draw}\r\n            onMouseMove={disturbanceEffect}\r\n            establishContext={establishContext}\r\n            establishCanvasWidth={establishCanvasWidth}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MatrixBG;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}