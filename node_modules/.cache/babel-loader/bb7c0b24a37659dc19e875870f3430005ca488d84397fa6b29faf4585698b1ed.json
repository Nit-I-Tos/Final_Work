{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nikita\\\\\\u041A\\u0420\\\\project\\\\src\\\\components\\\\Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = props => {\n  _s();\n  const {\n    draw,\n    width = '100%',\n    height = '100%',\n    backgroundColor = '#000',\n    ...rest\n  } = props;\n  useEffect(() => {\n    let animationFrameId;\n\n    // Check if null context has been replaced on component mount\n    if (context) {\n      //Our draw came here\n      const render = () => {\n        resizeCanvas(context);\n        // Note: frameCount argument won't be needed\n        draw();\n        animationFrameId = window.requestAnimationFrame(render);\n      };\n      render();\n    }\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw, context]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...rest,\n    style: {\n      width,\n      height,\n      backgroundColor\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_s(Canvas, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Canvas","props","_s","draw","width","height","backgroundColor","rest","animationFrameId","context","render","resizeCanvas","window","requestAnimationFrame","cancelAnimationFrame","ref","canvasRef","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Nikita/лџла/project/src/components/Canvas.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst Canvas = (props) => {\r\n    const { draw, width = '100%', height = '100%', backgroundColor = '#000', ...rest } = props;\r\n\r\n    useEffect(() => {\r\n        let animationFrameId;\r\n\r\n        // Check if null context has been replaced on component mount\r\n        if (context) {\r\n            //Our draw came here\r\n            const render = () => {\r\n                resizeCanvas(context);\r\n                // Note: frameCount argument won't be needed\r\n                draw();\r\n                animationFrameId = window.requestAnimationFrame(render);\r\n            };\r\n            render();\r\n        }\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [draw, context]);\r\n    return <canvas ref={canvasRef} {...rest}  style={{ width, height, backgroundColor }} />;\r\n};\r\n\r\nexport default Canvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM;IAAEC,IAAI;IAAEC,KAAK,GAAG,MAAM;IAAEC,MAAM,GAAG,MAAM;IAAEC,eAAe,GAAG,MAAM;IAAE,GAAGC;EAAK,CAAC,GAAGN,KAAK;EAE1FL,SAAS,CAAC,MAAM;IACZ,IAAIY,gBAAgB;;IAEpB;IACA,IAAIC,OAAO,EAAE;MACT;MACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;QACjBC,YAAY,CAACF,OAAO,CAAC;QACrB;QACAN,IAAI,CAAC,CAAC;QACNK,gBAAgB,GAAGI,MAAM,CAACC,qBAAqB,CAACH,MAAM,CAAC;MAC3D,CAAC;MACDA,MAAM,CAAC,CAAC;IACZ;IACA,OAAO,MAAM;MACTE,MAAM,CAACE,oBAAoB,CAACN,gBAAgB,CAAC;IACjD,CAAC;EACL,CAAC,EAAE,CAACL,IAAI,EAAEM,OAAO,CAAC,CAAC;EACnB,oBAAOV,OAAA;IAAQgB,GAAG,EAAEC,SAAU;IAAA,GAAKT,IAAI;IAAGU,KAAK,EAAE;MAAEb,KAAK;MAAEC,MAAM;MAAEC;IAAgB;EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3F,CAAC;AAACnB,EAAA,CAtBIF,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAwBZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}